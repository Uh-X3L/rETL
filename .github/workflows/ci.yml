name: CI

on:
  workflow_dispatch:
  pull_request:
    types: [labeled]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    if: |
      contains(github.event.pull_request.labels.*.name, 'run-ci') && !contains(github.event.pull_request.labels.*.name, 'ignore-ci')
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Remove unwanted files
        run: rm -f rust-toolchain.toml
      - uses: dtolnay/rust-toolchain@1.86.0
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --workspace --all-targets -- -D warnings
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Audit dependencies
        run: cargo audit
      - name: Build docs
        run: cargo doc --workspace --no-deps --document-private-items
  build-and-test:
    if: |
      contains(github.event.pull_request.labels.*.name, 'run-ci') && !contains(github.event.pull_request.labels.*.name, 'ignore-ci')
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Remove unwanted files
        run: rm -f rust-toolchain.toml
      - uses: dtolnay/rust-toolchain@1.86.0
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
      - name: Build
        run: cargo build --workspace --all-targets
      - name: Test
        run: cargo test --workspace --all-targets
      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin --locked
      - name: Run code coverage
        run: cargo tarpaulin --workspace --all --out Xml
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: cobertura.xml
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: cobertura.xml

name: CI

on:
  workflow_dispatch:
  pull_request:
    types: [labeled]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  detect-changed-crates:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.set-matrix.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get changed files
        id: diff
        run: |
          echo "files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }})" >> $GITHUB_OUTPUT
      - name: Detect changed crates
        id: set-matrix
        run: |
          changed_crates=()
          for crate in components/*; do
            if [ -d "$crate" ]; then
              crate_name=$(basename "$crate")
              for file in ${{ steps.diff.outputs.files }}; do
                if [[ $file == $crate/* ]]; then
                  changed_crates+=("$crate_name")
                  break
                fi
              done
            fi
          done
          if [ ${#changed_crates[@]} -eq 0 ]; then
            echo "No crates changed. Defaulting to all."
            changed_crates=($(ls components))
          fi
          matrix=$(printf ',"%s"' "${changed_crates[@]}")
          matrix="[${matrix:1}]"
          echo "Changed crates: $matrix"
          echo "changed=$matrix" >> $GITHUB_OUTPUT

  lint:
    if: |
      contains(github.event.pull_request.labels.*.name, 'run-ci') && !contains(github.event.pull_request.labels.*.name, 'ignore-ci')
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Remove unwanted files
        run: rm -f rust-toolchain.toml
      - uses: dtolnay/rust-toolchain@1.86.0
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
      - name: Check formatting
        run: cargo fmt --all -- --check
      - name: Run clippy
        run: cargo clippy --workspace --all-targets -- -D warnings
      - name: Install cargo-audit
        run: cargo install cargo-audit
      - name: Audit dependencies
        run: cargo audit
      - name: Build docs
        run: cargo doc --workspace --no-deps --document-private-items
  build-and-test:
    needs: detect-changed-crates
    if: |
      contains(github.event.pull_request.labels.*.name, 'run-ci') && !contains(github.event.pull_request.labels.*.name, 'ignore-ci')
    name: Build and Test ${{ matrix.crate }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crate: ${{fromJson(needs.detect-changed-crates.outputs.changed)}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Remove unwanted files
        run: rm -f rust-toolchain.toml
      - uses: dtolnay/rust-toolchain@1.86.0
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
      - name: Build
        run: cargo build -p ${{ matrix.crate }} --all-targets
      - name: Test
        run: cargo test -p ${{ matrix.crate }} --all-targets
      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov --locked
      - name: Run code coverage
        run: cargo llvm-cov --package ${{ matrix.crate }} --all-features --lcov --output-path lcov.info
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.crate }}
          path: lcov.info
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: lcov.info
      - name: Install cargo2junit
        run: cargo install cargo2junit
      - name: Run tests and output JUnit XML
        run: cargo test -p ${{ matrix.crate }} --all-targets --no-fail-fast -- --format=json | cargo2junit > junit.xml
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          files: junit.xml

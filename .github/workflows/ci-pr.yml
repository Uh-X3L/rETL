name: Rust CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Remove unwanted files
        run: rm -f rust-toolchain.toml
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
      - name: Check formatting
        run: cargo fmt --all -- --check

  build-and-test:
    name: Build and Test Changed Crates
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Remove unwanted files
        run: rm -f rust-toolchain.toml
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust-cache-${{ hashFiles('**/Cargo.lock') }}"
          cache-on-failure: true
      - name: Detect changed crates
        id: set-matrix
        run: |
          changed_crates=()
          for crate in components/*; do
            if [ -d "$crate" ]; then
              crate_name=$(basename "$crate")
              if [[ $crate_name == .* ]]; then
                continue
              fi
              for file in $(git diff --name-only origin/main...HEAD); do
                if [[ $file == $crate/*.rs ]]; then
                  changed_crates+=("$crate_name")
                  break
                fi
              done
            fi
          done
          if [ ${#changed_crates[@]} -eq 0 ]; then
            echo "No crates changed. Skipping tests."
            exit 0
          fi
          echo "Changed crates: ${changed_crates[@]}"
          echo "crates=${changed_crates[@]}" >> $GITHUB_OUTPUT
      - name: Test changed crates
        if: steps.set-matrix.outputs.crates != ''
        run: |
          for crate in ${{ steps.set-matrix.outputs.crates }}; do
            cargo clippy -p $crate --all-targets -- -D warnings
            cargo test -p $crate --all-targets
          done
